/* Q2. Count of primes

You will be given an integer n. You need to return the count of prime numbers less than or equal to n.


Problem Constraints
0 <= n <= 10^3


Input Format
Single input parameter n in function.


Output Format
Return the count of prime numbers less than or equal to n.


Example Input
Input 1: 19
Input 2: 1


Example Output
Output 1: 8
Output 2: 0


Example Explanation
Explanation 1: Primes <= 19 are 2, 3, 5, 7, 11, 13, 17, 19
Explanation 2: There are no primes <= 1  */
//------------------------------------------------------------------------------------------------------------------------------------------------

public class Solution {
    public int solve(int A) {
        if(A<=1)
            return 0;
        if(A==2)
            return 1;
        int count=1;
        for(int i=3;i<=A;i=i+2)
        {
            // System.out.println("i:"+i);
            if(isPrime(i))
                count++;
            // System.out.println("count:"+count);
        }
        return count;
    }
    public boolean isPrime(int n)
    {
        int factor=0;
        for(int i=1;i*i<=n;i++)
        {
            if(n%i==0)
            {
                if(i==n/i) factor=factor+1;
                else       factor=factor+2;
            }
        }
        // System.out.println("factor:"+factor);
        if(factor==2)
            return true;
        else
            return false;
    }
}
