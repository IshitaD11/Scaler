/* Q3. Kth Symbol - Hard

Problem Description
On the first row, we write a 0. Now in every subsequent row, we look at the previous row and replace each occurrence of 0 with 01, and each occurrence of 1 with 10.

Given row number A and index B, return the Bth indexed symbol in row A. (The values of B are 0-indexed.).



Problem Constraints
1 <= A <= 105

0 <= B <= min(2A - 1 - 1 , 1018)



Input Format
First argument is an integer A.

Second argument is an integer B.



Output Format
Return an integer denoting the Bth indexed symbol in row A.



Example Input
Input 1:

 A = 3
 B = 0
Input 2:

 A = 4
 B = 4


Example Output
Output 1:

 0
Output 2:

 1


Example Explanation
Explanation 1:

 Row 1: 0
 Row 2: 01
 Row 3: 0110
Explanation 2:

 Row 1: 0
 Row 2: 01
 Row 3: 0110
 Row 4: 01101001  */
 
 /* Observation: it is a tree. If we flow the path a is rows, and b is column, then a reduce by a-1 and b reduce by b/2
        0
      0   1
    0  1 1  0
  0 1 1 0 1 0 0 1
0 1 1 0 1 0 0 1 1 0 0  1  0  1   1 0  ---> a=4 
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15 ---> index/b

if previous element is 0 and current index or B is even, it is 0. 
if previous element is 1 and current index or B is odd, it is 0. Other wise it will return 1.
*/

public class Solution {
    public int solve(int A, long B) {
        return symbol(A,B);
    }

    public int symbol(int a, long b)
    {
        if(a==0)
            return 0;
        int tmp = symbol((a-1),(b/2));
        if((tmp==0 && (b%2)==0)||(tmp==1 && (b%2)!=0))
            return 0;
        else 
            return 1;
    }
}
