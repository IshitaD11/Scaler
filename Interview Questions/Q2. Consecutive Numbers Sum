/* Q2. Consecutive Numbers Sum

Problem Description
Given a positive integer A.

Return the number of ways it can be written as a sum of consecutive positive integers.



Problem Constraints
1 <= A <= 109



Input Format
The first and the only argument of input contains an integer, A.



Output Format
Return an integer, representing the answer as described in the problem statement.



Example Input
Input 1:

 A = 5
Input 2:

 A = 15


Example Output
Output 1:

 2
Output 2:

 4


Example Explanation
Explanation 1:

 The 2 ways are:
 => [5]
 => [2, 3]
Explanation 2:

 The 4 ways are:
 => [15]
 => [7, 8]
 => [4, 5, 6] 
 => [1, 2, 3, 4, 5] */
 
 /*Lets say A=(x+1)+(x+2)+(x+3)+....+(x+n)
            = nx+1+2+3+...n = nx+(n*(n+1))/2
        => nx = A-(n*(n+1))/2
        => x = (A-(n*(n+1))/2)/n

So x to exists(sum of consecutive nums to exists) => A-(n*(n+1))/2 should be divisible by n
We will check for all possible n starting from 1, if the above condition matches, then increase count  
if A<(n*(n+1))/2) ==> the x value will be negative which is incorrect. so check till A>=(n*(n+1))/2)           
*/

public class Solution {
    public int solve(int A) {
        int num = 1;
        int sumOfNums = num*(num+1)/2;
        int count=0;
        while(A>=sumOfNums)
        {
            if((A-sumOfNums)%num==0)
                count++;
            num++;
            sumOfNums=num*(num+1)/2;
        }
        return count;
    }
}
