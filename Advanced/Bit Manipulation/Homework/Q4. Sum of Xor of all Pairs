/* Q4. Sum of Xor of all Pairs

Problem Description
Given an array A of N integers. Find the sum of bitwise XOR all pairs of numbers in the array.

Since the answer can be large, return the remainder after the dividing the answer by 109+7.



Problem Constraints
1 <= N <= 105

1 <= A[i] < 109



Input Format
Only argument A is an array of integers



Output Format
Return an integer denoting the sum of xor of all pairs of number in the array.



Example Input
Input 1:
A = [1, 2, 3]
Input 2:
A = [3, 4, 2]


Example Output
Output 1:
6
Output 2:
14


Example Explanation
For Input 1:
Pair    Xor
{1, 2}  3
{1, 3}  2
{2, 3}  1
Sum of xor of all pairs = 3 + 2 + 1 = 6.
For Input 2:
Pair    Xor
{3, 4}  7
{3, 2}  1
{4, 2}  6
Sum of xor of all pairs = 7 + 1 + 6 = 14. */

/*If there are X elements with the i-th bit set and Y elements with i-th bit unset, then the number of xor
pair where the i-th bit will be set is X*Y
Using this formula count the no of set bit and unset bit for ith position in whole array element and apply the formulay.
*/

public class Solution {
    public int solve(int[] A) {
        long sum = 0;
        long pos = 1;
        long setbit = 0;
        long unsetbit=0;
        long mod = 1000000007;

        for(int i=0;i<32;i++)
        {
            setbit = 0;
            unsetbit=0;
            for(int j=0;j<A.length;j++)
            {
                if(((A[j]>>i)&1)==1)
                    setbit++;
                else
                    unsetbit++;
            }

            long totalCnt = (setbit*unsetbit)%mod;

            sum=(sum+(totalCnt*pos)%mod)%mod;
            pos=pos*2;
        }
        return (int)sum;
    }
}
