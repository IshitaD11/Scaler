/* Q1. Strange Equality

Problem Description
Given an integer A.
Two numbers, X and Y, are defined as follows:

X is the greatest number smaller than A such that the XOR sum of X and A is the same as the sum of X and A.
Y is the smallest number greater than A, such that the XOR sum of Y and A is the same as the sum of Y and A.
Find and return the XOR of X and Y.

NOTE 1: XOR of X and Y is defined as X ^ Y where '^' is the BITWISE XOR operator.

NOTE 2: Your code will be run against a maximum of 100000 Test Cases.



Problem Constraints
1 <= A <= 109



Input Format
First and only argument is an integer A.



Output Format
Return an integer denoting the XOR of X and Y.



Example Input
A = 5


Example Output
10  */

/*Observation: Any number XOR and AND to be equal, set bit should be unset in lower number. 
For higher number 1 MSB to be increased and all other bits can be 0
Solution is to set the unset bit of A and add 1 extra MSB */

public class Solution {
    public int solve(int A) {
        int ans=0;
        int i=0;
        while(A>0)
        {
            if((A&1)!=1)
                ans=ans|(1<<i);
            i++;
            A=A>>1;
        }
        ans=ans|(1<<i);
        return ans;
    }
}

