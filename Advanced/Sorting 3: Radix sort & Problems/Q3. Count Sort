/* Q3. Count Sort

Problem Description
Given an array A. Sort this array using Count Sort Algorithm and return the sorted array.


Problem Constraints
1 <= |A| <= 105
1 <= A[i] <= 105


Input Format
The first argument is an integer array A.


Output Format
Return an integer array that is the sorted array A.


Example Input
Input 1:
A = [1, 3, 1]
Input 2:
A = [4, 2, 1, 3]


Example Output
Output 1:
[1, 1, 3]
Output 2:
[1, 2, 3, 4]


Example Explanation
For Input 1:
The array in sorted order is [1, 1, 3].
For Input 2:
The array in sorted order is [1, 2, 3, 4]. */

public class Solution {
    public int[] solve(int[] A) {
        int len = A.length;
        // get the maximum number in the array
        int max=A[0];
        for(int i=0;i<len;i++)
        {
            max = Math.max(A[i],max);
        } 

        // create freq array of length max+1
        int[] freq = new int[max+1];

        // store frequency of A elements into freq array
        for(int i=0;i<len;i++)
        {
            freq[A[i]]++;
        }

        int sortedIdx = 0;
        for(int i=0;i<=max;i++)
        {
            if(freq[i]>0)
            {
                for(int j=0;j<freq[i];j++)
                {
                    A[sortedIdx++] = i;
                }
            }
        }
        return A;
    }
}
